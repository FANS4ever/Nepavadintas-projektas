@model Gear.Models.Game
@{
    ViewBag.Title = "Game";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<meta name="viewport" content="width=device-width, initial-scale=1">
<style>
    .image-showcase {
        height: 394px;
        width: 700px;
        margin-bottom: 5px;
    }

    /*Sensitive values for width and height*/
    .image-menu {
        height: 125px;
        width: 700px;
        overflow: auto;
        white-space: nowrap;
    }

        .image-menu img {
            margin-top: 5px;
            width: 172px;
            height: 97px;
            cursor: pointer;
        }

    .info-text {
    }

    .video-player {
        position: relative;
        width: 460px;
        height: 259px;
    }

    .content-head {
        display: grid;
        grid-auto-columns: auto;
    }

    .image-wrapper {
        grid-column: 1;
    }

    .video-player-wrapper {
        grid-column: 2;
        text-align: right;
    }

    .cart-button-wrapper {
        border-radius: 5px;
        background-color: black;
    }

        .cart-button-wrapper span {
            font-size: 15px;
            color: white;
            margin: 5px;
        }

        .cart-button-wrapper input {
            margin: 2px;
        }

    .info-wrapper {
        display: grid;
    }

    .info-developer {
        grid-column: 1;
    }

    .cart-button-wrapper {
        grid-column: 2;
        align-self: flex-start;
        justify-self: flex-end;
        margin-right: 3px;
    }

    .info-extensive {
        grid-column: 1/3;
    }

    .comment-grid {
        display: grid;
        max-width: 700px;
        grid-template-columns: 9% 91%;
    }

    .comment-write {
        grid-column: 1;
        max-width: 700px;
        width: 700px;
        height: 150px;
        resize: none;
        margin-top: 10px;
    }

    .comment-display {
        grid-column: 2;
    }

    .user-profile-image {
        grid-column: 1;
        grid-row: 1 / span 3;
        border-radius: 50%;
        width: 50px;
        height: 50px;
    }

    .post-button {
        grid-column: 1;
        width: 70px;
        height: 35px;
        margin-top: 5px;
        justify-self: flex-end;
    }



    /****** Style Star Rating Widget *****/

    .rating {
        border: none;
        justify-self: flex-start;
        margin-left: -270px;
        margin-top: -2px;
    }

        .rating > input {
            display: none;
        }

        .rating > label:before {
            margin: 5px;
            font-size: 2.25em;
            font-family: FontAwesome;
            display: inline-block;
            content: "\f005";
        }

        .rating > label {
            color: #ddd;
            float: right;
        }

        /***** CSS Magic to Highlight Stars on Hover *****/

        .rating > input:checked ~ label, /* show gold star when clicked */
        .rating:not(:checked) > label:hover, /* hover current star */
        .rating:not(:checked) > label:hover ~ label {
            color: #FFD700;
        }
            /* hover previous stars in list */

            .rating > input:checked + label:hover, /* hover current star when changing rating */
            .rating > input:checked ~ label:hover,
            .rating > label:hover ~ input:checked ~ label, /* lighten current selection */
            .rating > input:checked ~ label:hover ~ label {
                color: #FFED85;
            }


    .comment-rating {
        grid-column: 2;
        border: none;
        height: 25px;
        display: inline-block;
        margin-top: -10px;
    }

        .comment-rating > star:before {
            font-size: 1.25em;
            font-family: FontAwesome;
            display: inline-block;
            content: "\f005";
        }

    .comment-rating-empty {
        color: #ddd;
    }

    .comment-rating-full {
        color: #FFD700;
    }


    .rating-review {
        grid-column: 2;
        border: none;
        height: 25px;
        display: inline-block;
    }

        .rating-review > star:before {
            font-size: 1.25em;
            font-family: FontAwesome;
            display: inline-block;
            content: "\f005";
        }

    .rating-review-empty {
        color: #ddd;
    }

    .rating-review-full {
        color: #FFD700;
    }

    .rating-text {
        grid-column: 1;
        grid-row: 1 / span 6;
        margin-top: 20px;
    }

    .rating-grid {
        grid-column: 1;
        max-width: 700px;
        display: grid;
        grid-template-columns: 20% 80%;
        margin-top: -20px;
    }

    .reply-button {
        grid-column: 2;
        background-color: Transparent;
        background-repeat: no-repeat;
        border: none;
        cursor: pointer;
        overflow: hidden;
        outline: none;
        width: 60px;
        font-weight: bold;
        color: #4f4f4f;
        margin-left: -11px;
        margin-top: -3px;
    }

        .reply-button:hover {
            grid-column: 2;
            background-color: Transparent;
            background-repeat: no-repeat;
            border: none;
            cursor: pointer;
            overflow: hidden;
            outline: none;
            width: 60px;
            font-weight: bold;
            color: black;
        }

    .date {
        grid-column: 2;
        color: #4f4f4f;
        font-weight: bold;
        font-size: 9pt;
    }


    .section-header {
        text-transform: uppercase;
    }

    .showcase {
        display: inline-block;
        /*Fit content*/
        height: auto;
        max-width: 700px;
        /*Make scroll menu*/
        overflow: auto;
        white-space: nowrap;
        /*Add margins*/
        margin-top: 10px;
        margin-bottom: 15px;
        margin-left: 5px;
        /*fix whitespaces*/
        padding-right: 16px;
    }

    .showcase-item {
        display: inline-grid;
        width: 250px;
        /*Remove whitespace*/
    }

    .showcase-item-image {
        grid-row: 1;
        grid-column: 1;
        width: 250px;
        height: auto;
    }

    .showcase-item-text {
        grid-row: 1;
        grid-column: 1;
        width: 100%;
        align-self: flex-end;
        background-color: rgb(224,224,224,0.7);
    }

    .showcase-item-price {
        grid-row: 1;
        grid-column: 1;
        align-self: flex-end;
        justify-self: flex-end;
        padding: 0px 3px 0px 3px;
        background-color: rgb(88,88,88,0.7);
        color: mediumturquoise;
    }

    .showcase-item-discount {
        grid-row: 1;
        grid-column: 1;
        align-self: flex-start;
        justify-self: flex-end;
        padding: 0px 3px 0px 3px;
        background-color: limegreen;
        color: lightgreen;
        opacity: 0.9;
        border-bottom-left-radius: 8px;
    }

    .line {
        grid-column: 2;
        border-bottom: 1px solid gray;
        max-width: 700px;
        margin-top: 8px;
    }

    .dropbtn {
        background: inherit;
        color: #4f4f4f;
        padding: 0px;
        font-size: 16pt;
        border: none;
        cursor: pointer;
        width: 10px;
        height: 10px;
        outline: 0;
    }

        .dropbtn:hover, .dropbtn:focus {
            color:black;
        }

    .dropdown {
        float: right;
        position: relative;
        display: inline-block;
    }

    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #f1f1f1;
        min-width: 160px;
        overflow: auto;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        right: 0;
        z-index: 1;
    }

        .dropdown-content a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

    .dropdown a:hover {
        background-color: #ddd;
    }

    .show {
        display: block;
    }
</style>

<script type="text/javascript">

    function showImage(imgPath) {
        var curImage = document.getElementById('currentImg');
        curImage.src = imgPath;
        curImage.alt = imgPath;
    }


    function getId(url) {
        var regExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/;
        var match = url.match(regExp);

        if (match && match[2].length == 11) {
            return match[2];
        } else {
            return 'error';
        }
    }

    function noteForBookMark() {
        var txt;
        var note = prompt("Please enter your note (not mandatory)", "");
        if (note != "") {
            //nota nusiust i duombaze
        }
    }

</script>

<br>
<h2>@Model.Name</h2>
<div class="content-head">
    <div class="image-wrapper">
        <img class="image-showcase" id="currentImg" src="~/Files/@Model.Dir/icon.jpg" title="Witcher">


        
        <div class="image-menu">
            <img src="~/Files/@Model.Dir/icon.jpg" onclick="showImage('../Files/@Model.Dir/icon.jpg');" data-pin-nopin="true">
            @{int imgNr = 0;
                while (true)
                {
                    string imgName = imgNr + ".jpg";
                    var path = "~/Files/" + Model.Dir + "/" + imgName;
                    var absolutePath = HttpContext.Current.Server.MapPath(path);
                    if (System.IO.File.Exists(absolutePath))
                    {
                        <img src="~/Files/@Model.Dir/@imgName" onclick="showImage('../Files/@Model.Dir/@imgName');" data-pin-nopin="true">
                        imgNr++;
                    }
                    else
                    {
                        break;
                    }

                }
            }
        </div>
    </div>
    <div class="video-player-wrapper">
        <iframe class="video-player" onload="this.onload=null; this.src='//www.youtube.com/embed/' + getId('https://www.youtube.com/watch?v=XHrskkHf958');" allowfullscreen></iframe>

        <iframe class="video-player" src='https://player.twitch.tv/?channel=@Model.Streamer&autoplay=false' allowfullscreen></iframe>
    </div>

    <div class="info-wrapper">
        <div class="info-developer">
            <span class="info-text"> Developer: @Model.Developer.Name</span><br>
            <span class="info-text"> Relese date: @Model.ReleaseDate.Year-@Model.ReleaseDate.Month-@Model.ReleaseDate.Day</span><br>
            <span class="info-text">
                Average score:
                @{ double score = 0;
                    for (int i = 0; i < Model.GameRatings.Count; i++)
                    {
                        score += double.Parse(Model.GameRatings.ElementAt(i).Rating);
                    }
                    if (score != 0)
                    {
                        score /= Model.GameRatings.Count;
                    }
                }
                @score
            </span><br>
            <span class="info-text"> Tags:</span><br>
        </div>
        <div class="cart-button-wrapper">
            <span>@Model.Price</span>
            <input class="cart-button" id="add-to-cart" type="button" value="Add to Cart" />

            <input class="cart-button" id="bookmark" type="button" value="Bookmark" onclick="noteForBookMark()" />
        </div>

        @*justify-self: flex-end;*@
        <div class="info-extensive">
            <h1>About Game:</h1>
            <span>@Model.Description</span><br><br>
        </div>
    </div>

    <div style="grid-column: 1;">
        <h1>Recomended games:</h1>
        <div class="showcase row">
            @for (int i = 0; i < 5; i++)
            {
                <div class="showcase-item" onclick="window.location.href = '/game/index'">
                    <img class="showcase-item-image" src="~/Files/@Model.Dir/icon.jpg" />
                    <text class="showcase-item-text">@Model.Name</text>
                    <text class="showcase-item-price">10.99$</text>
                    <text class="showcase-item-discount">100%</text>
                </div>
            }
        </div>
    </div>


    <h1 style="grid-column: 1;">Reviews:</h1>
    <div class="rating-grid">

        <center class="rating-text">
            <font size="40">@score</font> <br>
            <span>@Model.GameRatings.Count reviews</span>
        </center><br>
                 <div class="rating-review">
                     <star class="rating-review-full" for="star1" title="1 stars"></star>
                     <star class="rating-review-full" for="star2" title="2 stars"></star>
                     <star class="rating-review-full" for="star3" title="3 stars"></star>
                     <star class="rating-review-full" for="star4" title="4 stars"></star>
                     <star class="rating-review-full" for="star5" title="5 stars"></star>


                     <span>
                         @{
                             int fiveStars = 0;
                             for (int i = 0; i < Model.GameRatings.Count; i++)
                             {
                                 if (int.Parse(Model.GameRatings.ElementAt(i).Rating) == 5)
                                 {
                                     fiveStars++;
                                 }
                             }
                         } @fiveStars
                     </span>

                 </div>

        <div class="rating-review">
            <star class="rating-review-full" for="star1" title="1 stars"> </star>
            <star class="rating-review-full" for="star2" title="2 stars"> </star>
            <star class="rating-review-full" for="star3" title="3 stars"> </star>
            <star class="rating-review-full" for="star4" title="4 stars"> </star>
            <star class="rating-review-empty" for="star5" title="5 stars"> </star>

            <span> @{
                int fourStars = 0;
                for (int i = 0; i < Model.GameRatings.Count; i++)
                {
                    if (int.Parse(Model.GameRatings.ElementAt(i).Rating) == 4)
                    {
                        fourStars++;
                    }
                }
            } @fourStars </span>

        </div>




        <div class="rating-review">
            <star class="rating-review-full" for="star1" title="1 stars"> </star>
            <star class="rating-review-full" for="star2" title="2 stars"> </star>
            <star class="rating-review-full" for="star3" title="3 stars"> </star>
            <star class="rating-review-empty" for="star4" title="4 stars"> </star>
            <star class="rating-review-empty" for="star5" title="5 stars"> </star>

            <span>@{
                int threeStars = 0;
                for (int i = 0; i < Model.GameRatings.Count; i++)
                {
                    if (int.Parse(Model.GameRatings.ElementAt(i).Rating) == 3)
                    {
                        threeStars++;
                    }
                }
            } @threeStars</span>

        </div>

        <div class="rating-review">
            <star class="rating-review-full" for="star1" title="1 stars"> </star>
            <star class="rating-review-full" for="star2" title="2 stars"> </star>
            <star class="rating-review-empty" for="star3" title="3 stars"> </star>
            <star class="rating-review-empty" for="star4" title="4 stars"> </star>
            <star class="rating-review-empty" for="star5" title="5 stars"> </star>

            <span>@{
                int twoStars = 0;
                for (int i = 0; i < Model.GameRatings.Count; i++)
                {
                    if (int.Parse(Model.GameRatings.ElementAt(i).Rating) == 2)
                    {
                        twoStars++;
                    }
                }
            } @twoStars </span>

        </div>

        <div class="rating-review">
            <star class="rating-review-full" for="star1" title="1 stars"> </star>
            <star class="rating-review-empty" for="star2" title="2 stars"> </star>
            <star class="rating-review-empty" for="star3" title="3 stars"> </star>
            <star class="rating-review-empty" for="star4" title="4 stars"> </star>
            <star class="rating-review-empty" for="star5" title="5 stars"> </star>

            <span>@{
                int oneStars = 0;
                for (int i = 0; i < Model.GameRatings.Count; i++)
                {
                    if (int.Parse(Model.GameRatings.ElementAt(i).Rating) == 1)
                    {
                        oneStars++;
                    }
                }
            } @oneStars </span>

        </div>


    </div>


    <textarea class="comment-write" placeholder="start writing review here"></textarea>
    <input class="post-button" id="post" type="button" value="Post" />
    <fieldset class="rating">
        <input type="radio" id="star5" name="rating" value="5" /><label class="full" for="star5" title="5 stars"></label>
        <input type="radio" id="star4" name="rating" value="4" /><label class="full" for="star4" title="4 stars"></label>
        <input type="radio" id="star3" name="rating" value="3" /><label class="full" for="star3" title="3 stars"></label>
        <input type="radio" id="star2" name="rating" value="2" /><label class="full" for="star2" title="2 stars"></label>
        <input type="radio" id="star1" name="rating" value="1" /><label class="full" for="star1" title="1 star"></label>
    </fieldset>

    <div class="comment-grid">
        <img class="user-profile-image" src="~/Content/images/user.jpg" alt="witcher.jpg" title="Witcher">

        <div class="comment-rating">
            <b><span class="comment-display"> Vartotojas 1</span></b>
            <div class="dropdown">
                <button onclick="dropDown()" class="dropbtn">…</button>
                <div id="myDropdown" class="dropdown-content">
                    <a href="#home">Important</a>
                    <a href="#about">Warn</a>
                    <a href="#contact">Remove</a>
                </div>
            </div>

            @for (int i = 0; i < 5; i++)
            {
              //  if () jeigu 3 zvaigzdutes uzdet i < zvaigzduciu sk pasimt is modelio
              //  {
                        //det pilnas
               // }
             //  else{
                        //det tuscias
               // }
            }

            <star class="comment-rating-full" for="star1" title="1 stars"> </star>
            <star class="comment-rating-full" for="star2" title="2 stars"> </star>
            <star class="comment-rating-full" for="star3" title="3 stars"> </star>
            <star class="comment-rating-full" for="star4" title="4 stars"> </star>
            <star class="comment-rating-empty" for="star5" title="5 stars"> </star>
        </div>

        <span class="date"> 2018-10-29 </span>
        <span class="comment-display">Cia yra labai labai labai labai labai labai labai labai labai labai labai labai ilgas ilgas pirmo vartotojo komentaras</span>

        <div class="line"> </div>
        <span class="date"> Average score of review:  3</span>
        <input class="reply-button" id="reply" type="button" value="Reply" /><br>
    </div>

    <br>

    <div class="comment-grid" style="margin-left: 50px;">
        <img class="user-profile-image" src="~/Content/images/user.jpg" alt="witcher.jpg" title="Witcher">

        <div class="comment-rating">
            <b><span class="comment-display"> Vartotojas 2</span></b>
            <div class="dropdown">
            <button onclick="dropDown()" class="dropbtn">…</button>
            <div id="myDropdown" class="dropdown-content">
                <a href="#home">Important</a>
                <a href="#about">Warn</a>
                <a href="#contact">Remove</a>
            </div>
        </div>

            <star class="comment-rating-full" for="star1" title="1 stars"> </star>
            <star class="comment-rating-full" for="star2" title="2 stars"> </star>
            <star class="comment-rating-full" for="star3" title="3 stars"> </star>
            <star class="comment-rating-empty" for="star4" title="4 stars"> </star>
            <star class="comment-rating-empty" for="star5" title="5 stars"> </star>
        </div>

        <span class="date"> 2018-10-30 </span>
        <span class="comment-display">Cia yra atsakymas i labai labai labai labai labai labai labai labai labai labai labai labai ilga pirmo vartotojo komentara</span>
        <div class="line"> </div>
        <span class="date"> Average score of review:  0</span>
        <input class="reply-button" id="reply" type="button" value="Reply" onclick="noteForBookmark()" />
    </div>


</div>

<!--Naudoti jei nebereik grid-->
<div class="content-tail">

</div>

<!--Sriptas dropdownui-->
<script>
    /* When the user clicks on the button,
    toggle between hiding and showing the dropdown content */
    function dropDown() {
        document.getElementById("myDropdown").classList.toggle("show");
    }

    // Close the dropdown if the user clicks outside of it
    window.onclick = function (event) {
        if (!event.target.matches('.dropbtn')) {

            var dropdowns = document.getElementsByClassName("dropdown-content");
            var i;
            for (i = 0; i < dropdowns.length; i++) {
                var openDropdown = dropdowns[i];
                if (openDropdown.classList.contains('show')) {
                    openDropdown.classList.remove('show');
                }
            }
        }
    }
</script>